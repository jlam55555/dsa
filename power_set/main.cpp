#include "./power_set.hpp"

#include <vector>

#include "../utils/common.hpp"

int main() {
  // Leetcode 78
  std::vector<int> v1{1, 2, 3}, v2{0};
  std::vector<std::vector<int>> res1{{},  {3},    {2},    {2, 3},
                                     {1}, {1, 3}, {1, 2}, {1, 2, 3}},
      res2{{}, {0}};

  assert_eq(dsa::power_set::Subsets(v1), res1);
  assert_eq(dsa::power_set::Subsets(v2), res2);

  // Leetcode 90
  std::vector<int> v12{1, 2, 2}, v22{0}, v32{1, 2, 3, 2, 4, 2, 3, 2, 1};
  std::vector<std::vector<int>> res12{{}, {2}, {2, 2}, {1}, {1, 2}, {1, 2, 2}},
      res22{{}, {0}},
      res32{{},
            {4},
            {3},
            {3, 4},
            {3, 3},
            {3, 3, 4},
            {2},
            {2, 4},
            {2, 3},
            {2, 3, 4},
            {2, 3, 3},
            {2, 3, 3, 4},
            {2, 2},
            {2, 2, 4},
            {2, 2, 3},
            {2, 2, 3, 4},
            {2, 2, 3, 3},
            {2, 2, 3, 3, 4},
            {2, 2, 2},
            {2, 2, 2, 4},
            {2, 2, 2, 3},
            {2, 2, 2, 3, 4},
            {2, 2, 2, 3, 3},
            {2, 2, 2, 3, 3, 4},
            {2, 2, 2, 2},
            {2, 2, 2, 2, 4},
            {2, 2, 2, 2, 3},
            {2, 2, 2, 2, 3, 4},
            {2, 2, 2, 2, 3, 3},
            {2, 2, 2, 2, 3, 3, 4},
            {1},
            {1, 4},
            {1, 3},
            {1, 3, 4},
            {1, 3, 3},
            {1, 3, 3, 4},
            {1, 2},
            {1, 2, 4},
            {1, 2, 3},
            {1, 2, 3, 4},
            {1, 2, 3, 3},
            {1, 2, 3, 3, 4},
            {1, 2, 2},
            {1, 2, 2, 4},
            {1, 2, 2, 3},
            {1, 2, 2, 3, 4},
            {1, 2, 2, 3, 3},
            {1, 2, 2, 3, 3, 4},
            {1, 2, 2, 2},
            {1, 2, 2, 2, 4},
            {1, 2, 2, 2, 3},
            {1, 2, 2, 2, 3, 4},
            {1, 2, 2, 2, 3, 3},
            {1, 2, 2, 2, 3, 3, 4},
            {1, 2, 2, 2, 2},
            {1, 2, 2, 2, 2, 4},
            {1, 2, 2, 2, 2, 3},
            {1, 2, 2, 2, 2, 3, 4},
            {1, 2, 2, 2, 2, 3, 3},
            {1, 2, 2, 2, 2, 3, 3, 4},
            {1, 1},
            {1, 1, 4},
            {1, 1, 3},
            {1, 1, 3, 4},
            {1, 1, 3, 3},
            {1, 1, 3, 3, 4},
            {1, 1, 2},
            {1, 1, 2, 4},
            {1, 1, 2, 3},
            {1, 1, 2, 3, 4},
            {1, 1, 2, 3, 3},
            {1, 1, 2, 3, 3, 4},
            {1, 1, 2, 2},
            {1, 1, 2, 2, 4},
            {1, 1, 2, 2, 3},
            {1, 1, 2, 2, 3, 4},
            {1, 1, 2, 2, 3, 3},
            {1, 1, 2, 2, 3, 3, 4},
            {1, 1, 2, 2, 2},
            {1, 1, 2, 2, 2, 4},
            {1, 1, 2, 2, 2, 3},
            {1, 1, 2, 2, 2, 3, 4},
            {1, 1, 2, 2, 2, 3, 3},
            {1, 1, 2, 2, 2, 3, 3, 4},
            {1, 1, 2, 2, 2, 2},
            {1, 1, 2, 2, 2, 2, 4},
            {1, 1, 2, 2, 2, 2, 3},
            {1, 1, 2, 2, 2, 2, 3, 4},
            {1, 1, 2, 2, 2, 2, 3, 3},
            {1, 1, 2, 2, 2, 2, 3, 3, 4}};

  assert_eq(dsa::power_set::SubsetsDup(v12), res12);
  assert_eq(dsa::power_set::SubsetsDup(v22), res22);
  assert_eq(dsa::power_set::SubsetsDup(v32), res32);

  return 0;
}
